{"version":3,"sources":["components/CatCard/index.js","components/Wrapper/index.js","components/Title/index.js","App.js","index.js"],"names":["CatCard","props","react_default","a","createElement","className","onClick","cardIncrement","id","alt","name","src","image","Wrapper","children","Title","App","state","friends","count","clickedCat","_this","setState","map","cat","clicked","reset","shuffle","console","log","catarray","shuffleCats","_","_this2","this","components_Wrapper","components_Title","friend","components_CatCard","key","cardTwiceClick","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"upDAeeA,MAZf,SAAiBC,GACf,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOC,QAAS,kBAAIL,EAAMM,cAAcN,EAAMO,MAC3DN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKK,IAAKR,EAAMS,KAAMC,IAAKV,EAAMW,SAEnCV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBCFNQ,MAJf,SAAiBZ,GACf,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAMa,iBCI1BC,MALf,SAAed,GACb,OAAQC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAASJ,EAAMa,kCCqFxBE,6MA7EbC,MAAQ,CACNC,UACAC,MAAO,KAKTZ,cAAgB,SAAAC,GAEd,IAAIY,GAAa,EACjBC,EAAKC,SAAS,CACZH,MAAOE,EAAKJ,MAAME,MAAQ,IAE5BE,EAAKC,SAAS,CACZJ,QAASG,EAAKJ,MAAMC,QAAQK,IAAI,SAACC,GAa/B,OAXIA,EAAIhB,KAAOA,KAEO,IAAhBgB,EAAIC,UACNL,GAAa,GAGfI,EAAIC,SAAU,GAKTD,OAIQ,IAAfJ,GACFC,EAAKK,QAGPL,EAAKM,aAIPD,MAAQ,WAENE,QAAQC,IAAI,aACZR,EAAKC,SAAS,CACZJ,QAASG,EAAKJ,MAAMC,QAAQK,IAAI,SAACC,GAE/B,OADAA,EAAIC,SAAU,EACPD,IAETL,MAAO,OAGXQ,QAAU,WACR,IAAIG,EAAWT,EAAKJ,MAAMC,QACtBa,EAAcC,IAAEL,QAAQG,GAC5BT,EAAKC,SAAS,CAAEJ,QAASa,6EAKlB,IAAAE,EAAAC,KACP,OAAShC,EAAAC,EAAAC,cAAE+B,EAAF,KAELjC,EAAAC,EAAAC,cAACgC,EAAD,qDAAiCF,KAAKjB,MAAME,MAA5C,qBAFK,IAGLe,KAAKjB,MAAMC,QAAQK,IAAI,SAAAc,GAAM,OACzBnC,EAAAC,EAAAC,cAAEkC,EAAF,CAEF9B,GAAM6B,EAAO7B,GACb+B,IAAOF,EAAO7B,GACdI,MAASyB,EAAOzB,MAChBL,cAAiB0B,EAAK1B,cACtBiC,eAAkBP,EAAKO,mBAVpB,YA7DKC,mBCLlBC,IAASC,OAAOzC,EAAAC,EAAAC,cAACwC,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.14473faf.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction CatCard(props) {\r\n  return (\r\n    <div className=\"card\" onClick={()=>props.cardIncrement(props.id)}>\r\n      <div className=\"img-container\">\r\n        <img alt={props.name} src={props.image} />\r\n      </div>\r\n      <div className=\"content\">\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CatCard;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Wrapper(props) {\r\n  return <div className=\"wrapper\">{props.children}</div>;\r\n}\r\n\r\nexport default Wrapper;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Title(props) {\r\n  return  <h1 className=\"title\">{props.children}</h1>;\r\n       \r\n}\r\n\r\nexport default Title;\r\n","import React, {\r\n  Component\r\n} from \"react\";\r\nimport CatCard from \"./components/CatCard\";\r\nimport Wrapper from \"./components/Wrapper\";\r\nimport Title from \"./components/Title\";\r\nimport friends from \"./friends.json\";\r\nimport _ from 'lodash';\r\n\r\n\r\nclass App extends Component {\r\n  // Setting this.state.friends to the friends json array\r\n  state = {\r\n    friends,\r\n    count: 0,\r\n\r\n  };\r\n\r\n\r\n  cardIncrement = id => {\r\n    // We always use the setState method to update a component's state\r\n    let clickedCat = false;\r\n    this.setState({\r\n      count: this.state.count + 1\r\n    });\r\n    this.setState({\r\n      friends: this.state.friends.map((cat) => {\r\n  \r\n        if (cat.id === id) {\r\n             \r\n          if (cat.clicked === true) {\r\n            clickedCat = true\r\n\r\n          }\r\n          cat.clicked = true;\r\n          \r\n          \r\n\r\n        }\r\n        return cat;\r\n\r\n      })\r\n    });\r\n    if (clickedCat === true) {\r\n      this.reset();\r\n    }\r\n\r\n    this.shuffle();\r\n\r\n  };\r\n\r\n  reset = () => {\r\n    \r\n    console.log(\"I'm reset\")\r\n    this.setState({\r\n      friends: this.state.friends.map((cat) => {\r\n        cat.clicked = false;\r\n        return cat;\r\n      }),\r\n      count: 0 });\r\n  };\r\n\r\n  shuffle = () => {\r\n    let catarray = this.state.friends;\r\n    let shuffleCats = _.shuffle(catarray);\r\n    this.setState({ friends: shuffleCats});\r\n  }\r\n\r\n\r\n  // Map over this.state.friends and render a FriendCard component for each friend object\r\n  render() {\r\n    return ( < Wrapper >\r\n  \r\n        <Title> üêæ Clicky Cats üêæScore: {this.state.count}/12 üêæ </Title> {\r\n        this.state.friends.map(friend => \r\n          ( < CatCard\r\n          // removeFriend={this.removeFriend}\r\n          id = {friend.id}\r\n          key = {friend.id}\r\n          image = {friend.image}\r\n          cardIncrement = {this.cardIncrement}\r\n          cardTwiceClick = {this.cardTwiceClick}\r\n          />\r\n        ))\r\n      } </Wrapper>\r\n  );\r\n}\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}